When more than one processes access a same code segment that segment is known as critical section. Critical section contains shared variables or resources which are needed to be synchronized to maintain consistency of data variable. It means that in a group of cooperating processes, at a given point of time, only one process must be executing its critical section


If a process is executing in its critical section, then no other process is allowed to execute in the critical section then there is mutual exclusion.

Progress : If no process is executing in the critical section and other processes are waiting outside the critical section, then only those processes that are not executing in their remainder section can participate in deciding which will enter in the critical section next, and  when the selection can not be postponed indefinitely then it is calle progress.


Bounded Waiting is when there exisits a  bound  on the number of times that other processes are allowed to enter their critical sections after a process has made a request to enter its critical section and before that request is granted.


Following are the methods used to solve 

Peterson's solution is widely used solution to critical section problems.

Some operating system offers a lock functionality where a Process acquires a lock when entering the Critical section and releases the lock after leaving it.


A Semaphore is an integer variable, which can be accessed only through two operations wait() and signal().
There are two types of semaphores : Binary Semaphores and Counting Semaphores
