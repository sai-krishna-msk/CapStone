{"('Which layer is physical layer?', \"Representation of Bits: Data in this layer consists of stream of bits. The bits must be encoded into signals for transmission. It defines the type of encoding i.e. how 0's and 1's are changed to signal.\\n\\nData Rate: This layer defines the rate of transmission which is the number of bits per second.\\n\\nSynchronization: It deals with the synchronization of the transmitter and receiver. The sender and receiver are synchronized at bit level.\\n\\nInterface: The physical layer defines the transmission interface between devices and transmission medium.\\n\\nLine Configuration: This layer connects devices with the medium: Point to Point configuration and Multipoint configuration.\\n\\nTopologies: Devices must be connected using the following topologies: Mesh, Star, Ring and Bus.\\n\\nTransmission Modes: Physical Layer defines the direction of transmission between two devices: Simplex, Half Duplex, Full Duplex.\\nDeals with baseband and broadband transmission.\")": {"score": 0.9646593928337097, "start": 440, "end": 450, "answer": "Interface:"}, "('In which form ?', \"Representation of Bits: Data in this layer consists of stream of bits. The bits must be encoded into signals for transmission. It defines the type of encoding i.e. how 0's and 1's are changed to signal.\\n\\nData Rate: This layer defines the rate of transmission which is the number of bits per second.\\n\\nSynchronization: It deals with the synchronization of the transmitter and receiver. The sender and receiver are synchronized at bit level.\\n\\n**Interface: **The physical layer defines the transmission interface between devices and transmission medium.\\n\\nLine Configuration: This layer connects devices with the medium: Point to Point configuration and Multipoint configuration.\\n\\nTopologies: Devices must be connected using the following topologies: Mesh, Star, Ring and Bus.\\n\\nTransmission Modes: Physical Layer defines the direction of transmission between two devices: Simplex, Half Duplex, Full Duplex.\\nDeals with baseband and broadband transmission.\")": {"score": 0.15229929983615875, "start": 55, "end": 70, "answer": "stream of bits."}, "('What is Bit synchronization ?', \"Representation of Bits: Data in this layer consists of **stream of bits. **The bits must be encoded into signals for transmission. It defines the type of encoding i.e. how 0's and 1's are changed to signal.\\n\\nData Rate: This layer defines the rate of transmission which is the number of bits per second.\\n\\nSynchronization: It deals with the synchronization of the transmitter and receiver. The sender and receiver are synchronized at bit level.\\n\\n**Interface: **The physical layer defines the transmission interface between devices and transmission medium.\\n\\nLine Configuration: This layer connects devices with the medium: Point to Point configuration and Multipoint configuration.\\n\\nTopologies: Devices must be connected using the following topologies: Mesh, Star, Ring and Bus.\\n\\nTransmission Modes: Physical Layer defines the direction of transmission between two devices: Simplex, Half Duplex, Full Duplex.\\nDeals with baseband and broadband transmission.\")": {"score": 0.46414798498153687, "start": 362, "end": 387, "answer": "transmitter and receiver."}, "('What is Bit rate ?', \"Representation of Bits: Data in this layer consists of **stream of bits. **The bits must be encoded into signals for transmission. It defines the type of encoding i.e. how 0's and 1's are changed to signal.\\n\\nData Rate: This layer defines the rate of transmission which is the number of bits per second.\\n\\nSynchronization: It deals with the synchronization of the **transmitter and receiver. **The sender and receiver are synchronized at bit level.\\n\\n**Interface: **The physical layer defines the transmission interface between devices and transmission medium.\\n\\nLine Configuration: This layer connects devices with the medium: Point to Point configuration and Multipoint configuration.\\n\\nTopologies: Devices must be connected using the following topologies: Mesh, Star, Ring and Bus.\\n\\nTransmission Modes: Physical Layer defines the direction of transmission between two devices: Simplex, Half Duplex, Full Duplex.\\nDeals with baseband and broadband transmission.\")": {"score": 0.6214570999145508, "start": 272, "end": 303, "answer": "the number of bits per second."}, "('What are topologies ?', \"Representation of Bits: Data in this layer consists of **stream of bits. **The bits must be encoded into signals for transmission. It defines the type of encoding i.e. how 0's and 1's are changed to signal.\\n\\nData Rate: This layer defines the rate of transmission which is **the number of bits per second.\\n\\n**Synchronization: It deals with the synchronization of the **transmitter and receiver. **The sender and receiver are synchronized at bit level.\\n\\n**Interface: **The physical layer defines the transmission interface between devices and transmission medium.\\n\\nLine Configuration: This layer connects devices with the medium: Point to Point configuration and Multipoint configuration.\\n\\nTopologies: Devices must be connected using the following topologies: Mesh, Star, Ring and Bus.\\n\\nTransmission Modes: Physical Layer defines the direction of transmission between two devices: Simplex, Half Duplex, Full Duplex.\\nDeals with baseband and broadband transmission.\")": {"score": 0.9119781255722046, "start": 758, "end": 784, "answer": "Mesh, Star, Ring and Bus."}, "('What is Transmission mode ?', \"Representation of Bits: Data in this layer consists of **stream of bits. **The bits must be encoded into signals for transmission. It defines the type of encoding i.e. how 0's and 1's are changed to signal.\\n\\nData Rate: This layer defines the rate of transmission which is **the number of bits per second.\\n\\n**Synchronization: It deals with the synchronization of the **transmitter and receiver. **The sender and receiver are synchronized at bit level.\\n\\n**Interface: **The physical layer defines the transmission interface between devices and transmission medium.\\n\\nLine Configuration: This layer connects devices with the medium: Point to Point configuration and Multipoint configuration.\\n\\nTopologies: Devices must be connected using the following topologies: **Mesh, Star, Ring and Bus.\\n\\n**Transmission Modes: Physical Layer defines the direction of transmission between two devices: Simplex, Half Duplex, Full Duplex.\\nDeals with baseband and broadband transmission.\")": {"score": 0.19989491999149323, "start": 809, "end": 882, "answer": "Physical Layer defines the direction of transmission between two devices:"}, "('Which layer is physical layer?', 'The lowest layer of the OSI reference model is the physical layer. It is responsible for the actual physical connection between the devices. The physical layer contains information in the form of bits. It is responsible for transmitting individual bits from one node to the next. When receiving data, this layer will get the signal received and convert it into 0s and 1s and send them to the Data Link layer, which will put the frame back together.\\n\\nThe functions of the physical layer are :\\nBit synchronization provides the synchronization of the bits by providing a clock. This clock controls both sender and receiver thus providing synchronization at bit level.\\n\\nBit rate control defines the transmission rate i.e. the number of bits sent per second.\\n\\nPhysical topologies: Physical layer specifies the way in which the different, devices/nodes are arranged in a network i.e. bus, star or mesh topolgy.\\n\\nTransmission mode defines the way in which the data flows between the two connected devices. The various transmission modes possible are: Simplex, half-duplex and full-duplex.')": {"score": 0.21959051489830017, "start": 4, "end": 43, "answer": "lowest layer of the OSI reference model"}, "('In which form ?', 'The **lowest layer of the OSI reference model **is the physical layer. It is responsible for the actual physical connection between the devices. The physical layer contains information in the form of bits. It is responsible for transmitting individual bits from one node to the next. When receiving data, this layer will get the signal received and convert it into 0s and 1s and send them to the Data Link layer, which will put the frame back together.\\n\\nThe functions of the physical layer are :\\nBit synchronization provides the synchronization of the bits by providing a clock. This clock controls both sender and receiver thus providing synchronization at bit level.\\n\\nBit rate control defines the transmission rate i.e. the number of bits sent per second.\\n\\nPhysical topologies: Physical layer specifies the way in which the different, devices/nodes are arranged in a network i.e. bus, star or mesh topolgy.\\n\\nTransmission mode defines the way in which the data flows between the two connected devices. The various transmission modes possible are: Simplex, half-duplex and full-duplex.')": {"score": 0.7285898327827454, "start": 200, "end": 205, "answer": "bits."}, "('What is Bit synchronization ?', 'The **lowest layer of the OSI reference model **is the physical layer. It is responsible for the actual physical connection between the devices. The physical layer contains information in the form of **bits. **It is responsible for transmitting individual bits from one node to the next. When receiving data, this layer will get the signal received and convert it into 0s and 1s and send them to the Data Link layer, which will put the frame back together.\\n\\nThe functions of the physical layer are :\\nBit synchronization provides the synchronization of the bits by providing a clock. This clock controls both sender and receiver thus providing synchronization at bit level.\\n\\nBit rate control defines the transmission rate i.e. the number of bits sent per second.\\n\\nPhysical topologies: Physical layer specifies the way in which the different, devices/nodes are arranged in a network i.e. bus, star or mesh topolgy.\\n\\nTransmission mode defines the way in which the data flows between the two connected devices. The various transmission modes possible are: Simplex, half-duplex and full-duplex.')": {"score": 0.34587958455085754, "start": 564, "end": 582, "answer": "providing a clock."}, "('What is Bit rate ?', 'The **lowest layer of the OSI reference model **is the physical layer. It is responsible for the actual physical connection between the devices. The physical layer contains information in the form of **bits. **It is responsible for transmitting individual bits from one node to the next. When receiving data, this layer will get the signal received and convert it into 0s and 1s and send them to the Data Link layer, which will put the frame back together.\\n\\nThe functions of the physical layer are :\\nBit synchronization provides the synchronization of the bits by **providing a clock. **This clock controls both sender and receiver thus providing synchronization at bit level.\\n\\nBit rate control defines the transmission rate i.e. the number of bits sent per second.\\n\\nPhysical topologies: Physical layer specifies the way in which the different, devices/nodes are arranged in a network i.e. bus, star or mesh topolgy.\\n\\nTransmission mode defines the way in which the data flows between the two connected devices. The various transmission modes possible are: Simplex, half-duplex and full-duplex.')": {"score": 0.507157564163208, "start": 730, "end": 766, "answer": "the number of bits sent per second."}, "('What are topologies ?', 'The **lowest layer of the OSI reference model **is the physical layer. It is responsible for the actual physical connection between the devices. The physical layer contains information in the form of **bits. **It is responsible for transmitting individual bits from one node to the next. When receiving data, this layer will get the signal received and convert it into 0s and 1s and send them to the Data Link layer, which will put the frame back together.\\n\\nThe functions of the physical layer are :\\nBit synchronization provides the synchronization of the bits by **providing a clock. **This clock controls both sender and receiver thus providing synchronization at bit level.\\n\\nBit rate control defines the transmission rate i.e. **the number of bits sent per second.\\n\\n**Physical topologies: Physical layer specifies the way in which the different, devices/nodes are arranged in a network i.e. bus, star or mesh topolgy.\\n\\nTransmission mode defines the way in which the data flows between the two connected devices. The various transmission modes possible are: Simplex, half-duplex and full-duplex.')": {"score": 0.0381351001560688, "start": 894, "end": 921, "answer": "bus, star or mesh topolgy."}, "('What is Transmission mode ?', 'The **lowest layer of the OSI reference model **is the physical layer. It is responsible for the actual physical connection between the devices. The physical layer contains information in the form of **bits. **It is responsible for transmitting individual bits from one node to the next. When receiving data, this layer will get the signal received and convert it into 0s and 1s and send them to the Data Link layer, which will put the frame back together.\\n\\nThe functions of the physical layer are :\\nBit synchronization provides the synchronization of the bits by **providing a clock. **This clock controls both sender and receiver thus providing synchronization at bit level.\\n\\nBit rate control defines the transmission rate i.e. **the number of bits sent per second.\\n\\n**Physical topologies: Physical layer specifies the way in which the different, devices/nodes are arranged in a network i.e. **bus, star or mesh topolgy.\\n\\n**Transmission mode defines the way in which the data flows between the two connected devices. The various transmission modes possible are: Simplex, half-duplex and full-duplex.')": {"score": 0.5090072751045227, "start": 944, "end": 1018, "answer": "defines the way in which the data flows between the two connected devices."}, "('what is critical section ?', \"When more than one processes access a same code segment that segment is known as critical section. Critical section contains shared variables or resources which are needed to be synchronized to maintain consistency of data variable. It means that in a group of cooperating processes, at a given point of time, only one process must be executing its critical section\\n\\n\\nIf a process is executing in its critical section, then no other process is allowed to execute in the critical section then there is mutual exclusion.\\n\\nProgress : If no process is executing in the critical section and other processes are waiting outside the critical section, then only those processes that are not executing in their remainder section can participate in deciding which will enter in the critical section next, and  when the selection can not be postponed indefinitely then it is calle progress.\\n\\n\\nBounded Waiting is when there exisits a  bound  on the number of times that other processes are allowed to enter their critical sections after a process has made a request to enter its critical section and before that request is granted.\\n\\n\\nFollowing are the methods used to solve \\n\\nPeterson's solution is widely used solution to critical section problems.\\n\\nSome operating system offers a lock functionality where a Process acquires a lock when entering the Critical section and releases the lock after leaving it.\\n\\n\\nA Semaphore is an integer variable, which can be accessed only through two operations wait() and signal().\\nThere are two types of semaphores : Binary Semaphores and Counting Semaphores\\n\")": {"score": 0.2678719162940979, "start": 125, "end": 154, "answer": "shared variables or resources"}, "('how many process can be executed ? ', \"When more than one processes access a same code segment that segment is known as critical section. Critical section contains **shared variables or resources **which are needed to be synchronized to maintain consistency of data variable. It means that in a group of cooperating processes, at a given point of time, only one process must be executing its critical section\\n\\n\\nIf a process is executing in its critical section, then no other process is allowed to execute in the critical section then there is mutual exclusion.\\n\\nProgress : If no process is executing in the critical section and other processes are waiting outside the critical section, then only those processes that are not executing in their remainder section can participate in deciding which will enter in the critical section next, and  when the selection can not be postponed indefinitely then it is calle progress.\\n\\n\\nBounded Waiting is when there exisits a  bound  on the number of times that other processes are allowed to enter their critical sections after a process has made a request to enter its critical section and before that request is granted.\\n\\n\\nFollowing are the methods used to solve \\n\\nPeterson's solution is widely used solution to critical section problems.\\n\\nSome operating system offers a lock functionality where a Process acquires a lock when entering the Critical section and releases the lock after leaving it.\\n\\n\\nA Semaphore is an integer variable, which can be accessed only through two operations wait() and signal().\\nThere are two types of semaphores : Binary Semaphores and Counting Semaphores\\n\")": {"score": 0.21681058406829834, "start": 314, "end": 371, "answer": "only one process must be executing its critical section"}, "('what is mutual exclusion ?', \"When more than one processes access a same code segment that segment is known as critical section. Critical section contains **shared variables or resources **which are needed to be synchronized to maintain consistency of data variable. It means that in a group of cooperating processes, at a given point of time, **only one process must be executing its critical section\\n\\n\\n**If a process is executing in its critical section, then no other process is allowed to execute in the critical section then there is mutual exclusion.\\n\\nProgress : If no process is executing in the critical section and other processes are waiting outside the critical section, then only those processes that are not executing in their remainder section can participate in deciding which will enter in the critical section next, and  when the selection can not be postponed indefinitely then it is calle progress.\\n\\n\\nBounded Waiting is when there exisits a  bound  on the number of times that other processes are allowed to enter their critical sections after a process has made a request to enter its critical section and before that request is granted.\\n\\n\\nFollowing are the methods used to solve \\n\\nPeterson's solution is widely used solution to critical section problems.\\n\\nSome operating system offers a lock functionality where a Process acquires a lock when entering the Critical section and releases the lock after leaving it.\\n\\n\\nA Semaphore is an integer variable, which can be accessed only through two operations wait() and signal().\\nThere are two types of semaphores : Binary Semaphores and Counting Semaphores\\n\")": {"score": 0.42840826511383057, "start": 432, "end": 494, "answer": "no other process is allowed to execute in the critical section"}, "('what is progress ?', \"When more than one processes access a same code segment that segment is known as critical section. Critical section contains **shared variables or resources **which are needed to be synchronized to maintain consistency of data variable. It means that in a group of cooperating processes, at a given point of time, **only one process must be executing its critical section\\n\\n\\n**If a process is executing in its critical section, then **no other process is allowed to execute in the critical section **then there is mutual exclusion.\\n\\nProgress : If no process is executing in the critical section and other processes are waiting outside the critical section, then only those processes that are not executing in their remainder section can participate in deciding which will enter in the critical section next, and  when the selection can not be postponed indefinitely then it is calle progress.\\n\\n\\nBounded Waiting is when there exisits a  bound  on the number of times that other processes are allowed to enter their critical sections after a process has made a request to enter its critical section and before that request is granted.\\n\\n\\nFollowing are the methods used to solve \\n\\nPeterson's solution is widely used solution to critical section problems.\\n\\nSome operating system offers a lock functionality where a Process acquires a lock when entering the Critical section and releases the lock after leaving it.\\n\\n\\nA Semaphore is an integer variable, which can be accessed only through two operations wait() and signal().\\nThere are two types of semaphores : Binary Semaphores and Counting Semaphores\\n\")": {"score": 0.08330883830785751, "start": 543, "end": 593, "answer": "If no process is executing in the critical section"}, "('what is bounded waiting ?', \"When more than one processes access a same code segment that segment is known as critical section. Critical section contains **shared variables or resources **which are needed to be synchronized to maintain consistency of data variable. It means that in a group of cooperating processes, at a given point of time, **only one process must be executing its critical section\\n\\n\\n**If a process is executing in its critical section, then **no other process is allowed to execute in the critical section **then there is mutual exclusion.\\n\\nProgress : **If no process is executing in the critical section **and other processes are waiting outside the critical section, then only those processes that are not executing in their remainder section can participate in deciding which will enter in the critical section next, and  when the selection can not be postponed indefinitely then it is calle progress.\\n\\n\\nBounded Waiting is when there exisits a  bound  on the number of times that other processes are allowed to enter their critical sections after a process has made a request to enter its critical section and before that request is granted.\\n\\n\\nFollowing are the methods used to solve \\n\\nPeterson's solution is widely used solution to critical section problems.\\n\\nSome operating system offers a lock functionality where a Process acquires a lock when entering the Critical section and releases the lock after leaving it.\\n\\n\\nA Semaphore is an integer variable, which can be accessed only through two operations wait() and signal().\\nThere are two types of semaphores : Binary Semaphores and Counting Semaphores\\n\")": {"score": 0.003086805809289217, "start": 949, "end": 1034, "answer": "the number of times that other processes are allowed to enter their critical sections"}}